import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, { useEffect, useState } from "react";
import { v4 as uuidv4 } from 'uuid';
import RulesComponent from '../component/RulesComponent';
import { useRouter } from 'next/router'

const projectId = process.env.NEXT_PUBLIC_PROJECT_ID;
const flagKey = "big_bucket";
const sdkKey = process.env.NEXT_PUBLIC_SDK_KEY;

const axios = require('axios');
axios.defaults.headers.common['Authorization'] = sdkKey;

export default function Home()
{
  const [rulesData, setRulesData] = useState([]);
  const router = useRouter();
  const createNewExperimentInCode = () => {

    const key = uuidv4();

    axios.patch(`https://api.optimizely.com/flags/v1/projects/${projectId}/flags/${flagKey}/environments/production/ruleset`, [
      {
        "op": "add",
        "path": `/rules/${key}`,
        "value": {
          "key": key,
          "name": key,
          "type": "feature",
          "percentage_included": 5000,
          "metrics": [
            {
            "aggregator": "count",
            "event_id": 21684210616,
            "scope": "session",
            "winning_direction": "increasing"
            }
          ],
          "variations": {
            "off": {
              "key": "off",
              "name": "Off",
              "percentage_included": 5000
            },
            "on": {
              "key": "on",
              "name": "On",
              "percentage_included": 5000
            }
          }
        }
      },
      {
        "op": "add",
        "path": "/rule_priorities/0",
        "value": key
        }
    ]).then(() => router.reload(window.location.pathname))
    .catch(ex =>
      console.log("Create experiment issue", ex)
    )
  }

  useEffect(() => {

    let rulesData = [];

    axios.get(`https://api.optimizely.com/flags/v1/projects/${projectId}/flags/${flagKey}/environments/production/ruleset`)
    .then(function (response) {
      Object.keys(response?.data?.rules).forEach(item => {
        const tempObject = response?.data?.rules[item];
        console.log(tempObject);
        rulesData.push(tempObject);
      });
    }).catch(ex =>
      console.log("Failed to get project data", ex)
    ).finally(() => {
      setRulesData(rulesData);
    });
  },[projectId]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        <main className={styles.main}>

        <div>
            {rulesData && <RulesComponent rulesData={rulesData} />}
        </div>

        <button onClick={createNewExperimentInCode}>
            Create new feature
        </button>

        </main>

        <footer className={styles.footer}>
        </footer>
    </div>
  )
}
